---
// SubmissionForm.astro
---

<div class="form-container">
  <h2>Submit Your Information</h2>
  <form id="submission-form" class="submission-form" enctype="multipart/form-data">
    <div id="form-alerts"></div>
    
    <div class="form-group">
      <label for="name">Name</label>
      <input 
        type="text" 
        id="name" 
        name="name" 
        class="form-control" 
        required 
      />
    </div>
    
    <div class="form-group">
      <label for="email">Email</label>
      <input 
        type="email" 
        id="email" 
        name="email" 
        class="form-control" 
        required 
      />
    </div>
    
    <div class="form-group">
      <label for="message">Message</label>
      <textarea 
        id="message" 
        name="message" 
        class="form-control" 
        required
      ></textarea>
    </div>
    
    <div class="form-group">
      <label for="photo">Photo (optional)</label>
      <input 
        type="file" 
        id="photo" 
        name="photo" 
        class="form-control" 
        accept="image/jpeg,image/jpg,image/png,image/webp" 
      />
      <small class="form-text">Max size: 5MB. Accepted formats: JPEG, PNG, WebP</small>
    </div>
    
    <button type="submit" class="submit-btn">Submit</button>
  </form>
</div>

<script>
  // Form submission handler
  const form = document.getElementById('submission-form') as HTMLFormElement;
  const alertsContainer = document.getElementById('form-alerts');
  
  if (form && alertsContainer) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      
      // Clear previous alerts
      alertsContainer.innerHTML = '';
      
      try {
        // Get form data including file
        const formData = new FormData(form);
        
        // Check if a file was uploaded
        const photoFile = formData.get('photo') as File;
        if (photoFile && photoFile.size > 0) {
          // Validate file size
          if (photoFile.size > 5 * 1024 * 1024) {
            showAlert('error', 'Photo must be smaller than 5MB');
            return;
          }
          
          // Validate file type
          const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
          if (!allowedTypes.includes(photoFile.type)) {
            showAlert('error', 'Photo must be JPEG, PNG, or WebP format');
            return;
          }
        } else {
          // Remove empty file field from formData
          formData.delete('photo');
        }
        
        // Submit data to API with FormData (multipart/form-data)
        const response = await fetch('/api/submit', {
          method: 'POST',
          // Don't set Content-Type when sending FormData
          // The browser will set it with the correct boundary
          body: formData,
        });
        
        // Parse response
        const result = await response.json();
        
        if (!response.ok || !result.success) {
          // Show error message
          const errorMessage = result.error || 'Something went wrong. Please try again.';
          showAlert('error', errorMessage);
          return;
        }
        
        // Show success message
        showAlert('success', 'Thank you! Your submission has been received.');
        
        // Reset the form
        form.reset();
        
        // Refresh the page after a short delay to show the new submission in the table
        setTimeout(() => {
          window.location.reload();
        }, 2000);
        
      } catch (error) {
        console.error('Submission error:', error);
        showAlert('error', 'An error occurred. Please try again.');
      }
    });
  }
  
  // Helper function to show alerts
  function showAlert(type: 'success' | 'error', message: string) {
    if (!alertsContainer) return;
    
    const alertElement = document.createElement('div');
    alertElement.className = `alert alert-${type}`;
    alertElement.textContent = message;
    
    alertsContainer.appendChild(alertElement);
    
    // Auto-hide success messages after 5 seconds
    if (type === 'success') {
      setTimeout(() => {
        alertElement.remove();
      }, 5000);
    }
  }
</script>
